cat("\nmodel-list prediction")
startTime <- Sys.time()
# dir_resample_mask_ssp1 <- paste(dir_resample_mask,'/ssp126_2071_2100/',sep = '')
# dir_resample_mask_ssp2 <- paste(dir_resample_mask,'/ssp245_2071_2100/',sep = '')
# dir_resample_mask_ssp3 <- paste(dir_resample_mask,'/ssp370_2071_2100/',sep = '')
# dir_resample_mask_ssp5 <- paste(dir_resample_mask,'/ssp585_2071_2100/',sep = '')
#
maxent_raster_dir_this <- paste(maxent_raster_dir,'/',dir_sub_name,sep = '')
print(maxent_raster_dir_this)
if (!dir.exists(maxent_raster_dir_this)){
dir.create(maxent_raster_dir_this)
}else{
print("dir exists")
}
for (i in 1:number_replicate){
cat("\n",i)
mod <- mod_list[[i]]
########################################
# historical prediction                #
########################################
startTime <- Sys.time()
print("historical_clim")
historical_grid <- read.csv(grid_path_list$historical_all)
historical_all_area_grid <- subset(historical_grid[complete.cases(historical_grid), ],select = -c(left, top,right,bottom,X,forest_grassland))
historical_cell_id <-  historical_all_area_grid$id
historical_all_area_grid_no_id <- subset(historical_all_area_grid,select = -c(id))
print("make prediction")
ped <- predict(mod,historical_all_area_grid_no_id)
# save csv file
ped['id'] <- historical_cell_id
save_csv_path <- paste(maxent_raster_dir_this,"/historical_predict_",this_bug,'_',i,'.csv',sep = '')
write.csv(ped, file = save_csv_path)
endTime <- Sys.time()
print(endTime-startTime)
########################################
# predictions for the future   SSP1    #
########################################
run_maxent_model_prediction_single(mod=mod,
this_item_name=paste("historical_predict",i,sep = ''),
this_item_path=grid_path_list$historical_all,
maxent_raster_dir_this=maxent_raster_dir_this,
historical=T)
clim_list1_1 <- subset(read.csv(grid_path_list$ssp1_lc),select = -c(left, top,right,bottom))
clim_list1_2 <- subset(read.csv(grid_path_list$ssp1_bc),select = -c(left, top,right,bottom))
all_grid_clim1_raw <- merge(x = clim_list1_1, y = clim_list1_2, by = "id")
occ_grid_clim1_values <- all_grid_clim1_raw[complete.cases(all_grid_clim1_raw), ]
clim1_cell_id <- occ_grid_clim1_values$id
clim1_all_area_grid_no_id <- subset(occ_grid_clim1_values,select = -c(id))
ped1 <- predict(mod,clim1_all_area_grid_no_id)
# save csv file
ped1['id'] <- clim1_cell_id
save_csv_path1 <- paste(maxent_raster_dir_this,"/ssp126_predict_",this_bug,'_',i,'.csv',sep = '')
write.csv(ped1, file = save_csv_path1)
########################################
# predictions for the future   SSP2    #
########################################
clim_list2_1 <- subset(read.csv(grid_path_list$ssp2_lc),select = -c(left, top,right,bottom))
clim_list2_2 <- subset(read.csv(grid_path_list$ssp2_bc),select = -c(left, top,right,bottom))
all_grid_clim2_raw <- merge(x = clim_list2_1, y = clim_list2_2, by = "id")
occ_grid_clim2_values <- all_grid_clim2_raw[complete.cases(all_grid_clim2_raw), ]
clim2_cell_id <- occ_grid_clim2_values$id
clim2_all_area_grid_no_id <- subset(occ_grid_clim2_values,select = -c(id))
ped2 <- predict(mod,clim2_all_area_grid_no_id)
# save csv file
ped2['id'] <- clim2_cell_id
save_csv_path2 <- paste(maxent_raster_dir_this,"/ssp245_predict_",this_bug,'_',i,'.csv',sep = '')
write.csv(ped2, file = save_csv_path2)
########################################
# predictions for the future   SSP3    #
########################################
clim_list3_1 <- subset(read.csv(grid_path_list$ssp3_lc),select = -c(left, top,right,bottom))
clim_list3_2 <- subset(read.csv(grid_path_list$ssp3_bc),select = -c(left, top,right,bottom))
all_grid_clim3_raw <- merge(x = clim_list3_1, y = clim_list3_2, by = "id")
occ_grid_clim3_values <- all_grid_clim3_raw[complete.cases(all_grid_clim3_raw), ]
clim3_cell_id <- occ_grid_clim3_values$id
clim3_all_area_grid_no_id <- subset(occ_grid_clim3_values,select = -c(id))
ped3 <- predict(mod,clim3_all_area_grid_no_id)
# save csv file
ped3['id'] <- clim3_cell_id
save_csv_path3 <- paste(maxent_raster_dir_this,"/ssp370_predict_",this_bug,'_',i,'.csv',sep = '')
write.csv(ped3, file = save_csv_path3)
########################################
# predictions for the future   SSP5    #
########################################
clim_list5_1 <- subset(read.csv(grid_path_list$ssp5_lc),select = -c(left, top,right,bottom))
clim_list5_2 <- subset(read.csv(grid_path_list$ssp5_bc),select = -c(left, top,right,bottom))
all_grid_clim5_raw <- merge(x = clim_list5_1, y = clim_list5_2, by = "id")
occ_grid_clim5_values <- all_grid_clim5_raw[complete.cases(all_grid_clim5_raw), ]
clim5_cell_id <- occ_grid_clim5_values$id
clim5_all_area_grid_no_id <- subset(occ_grid_clim5_values,select = -c(id))
ped5 <- predict(mod,clim5_all_area_grid_no_id)
# save csv file
ped5['id'] <- clim5_cell_id
save_csv_path5 <- paste(maxent_raster_dir_this,"/ssp585_predict_",this_bug,'_',i,'.csv',sep = '')
write.csv(ped5, file = save_csv_path5)
}
endTime <- Sys.time()
print(endTime-startTime)
}
run_maxent_model_prediction_basic_grid <- function(mod_list,grid_path_list,dir_sub_name,maxent_raster_dir){
# take one trained maxent model
# perform prediction on historical and future projected 2071-2100 ssp1, ssp2, ssp3, ssp5 rasters (after aligned)
# save the results as .tif files
cat("\nbasic prediction")
mod <- readRDS(mod_path)
maxent_raster_dir_this <- paste(maxent_raster_dir,'/',dir_sub_name,sep = '')
print(maxent_raster_dir_this)
if (!dir.exists(maxent_raster_dir_this)){
dir.create(maxent_raster_dir_this)
}else{
print("dir exists")
}
########################################
# historical prediction                #
########################################
#
run_maxent_model_prediction_single(mod=mod,
this_item_name=paste("historical_predict","_allinput",sep = ''),
grid_path_list_this = grid_path_list$historical_all,
maxent_raster_dir_this=maxent_raster_dir_this,
historical=T)
########################################
# predictions for the future   SSP1    #
########################################
run_maxent_model_prediction_single(mod=mod,
this_item_name=paste("ssp126","_allinput",sep = ''),
grid_path_list_this = c(grid_path_list$ssp1_lc,grid_path_list$ssp1_bc),
maxent_raster_dir_this=maxent_raster_dir_this,
historical=F)
########################################
# predictions for the future   SSP2    #
########################################
run_maxent_model_prediction_single(mod=mod,
this_item_name=paste("ssp245","_allinput",sep = ''),
grid_path_list_this = c(grid_path_list$ssp2_lc,grid_path_list$ssp2_bc),
maxent_raster_dir_this=maxent_raster_dir_this,
historical=F)
########################################
# predictions for the future   SSP3    #
########################################
run_maxent_model_prediction_single(mod=mod,
this_item_name=paste("ssp370","_allinput",sep = ''),
grid_path_list_this = c(grid_path_list$ssp3_lc,grid_path_list$ssp3_bc),
maxent_raster_dir_this=maxent_raster_dir_this,
historical=F)
########################################
# predictions for the future   SSP5    #
########################################
run_maxent_model_prediction_single(mod=mod,
this_item_name=paste("ssp585","_allinput",sep = ''),
grid_path_list_this = c(grid_path_list$ssp5_lc,grid_path_list$ssp5_bc),
maxent_raster_dir_this=maxent_raster_dir_this,
historical=F)
}
run_maxent_model_prediction_list_grid <- function(mod_list_path,grid_path_list,dir_sub_name,number_replicate,maxent_raster_dir){
# take a list of trained maxent models
# perform prediction on historical and future projected 2071-2100 ssp1, ssp2, ssp3, ssp5 rasters (after aligned)
# save the results as .tif files
# mod_list: list of trained maxent models
# clim: historical bioclimatic rasters (aligned)
# maxent_raster_dir: the directory under which the bioclimatic rasters (aligned) are stored, with rasters for ssp1 - ssp5 stored under corresponding subfolders.
cat("\nmodel-list prediction")
startTime <- Sys.time()
mod_list <- readRDS(mod_list_path)
maxent_raster_dir_this <- paste(maxent_raster_dir,'/',dir_sub_name,sep = '')
print(maxent_raster_dir_this)
if (!dir.exists(maxent_raster_dir_this)){
dir.create(maxent_raster_dir_this)
}else{
print("dir exists")
}
for (i in 1:number_replicate){
cat("\n",i)
mod <- mod_list[[i]]
########################################
# historical prediction                #
########################################
#
startTime <- Sys.time()
run_maxent_model_prediction_single(mod=mod,
this_item_name=paste("historical_predict",i,sep = ''),
grid_path_list_this = grid_path_list$historical_all,
maxent_raster_dir_this=maxent_raster_dir_this,
historical=T)
print("historical_clim")
endTime <- Sys.time()
print(endTime-startTime)
########################################
# predictions for the future   SSP1    #
########################################
startTime <- Sys.time()
run_maxent_model_prediction_single(mod=mod,
this_item_name=paste("ssp126",i,sep = ''),
grid_path_list_this = c(grid_path_list$ssp1_lc,grid_path_list$ssp1_bc),
maxent_raster_dir_this=maxent_raster_dir_this,
historical=F)
print("ssp1")
endTime <- Sys.time()
print(endTime-startTime)
########################################
# predictions for the future   SSP2    #
########################################
startTime <- Sys.time()
run_maxent_model_prediction_single(mod=mod,
this_item_name=paste("ssp245",i,sep = ''),
grid_path_list_this = c(grid_path_list$ssp2_lc,grid_path_list$ssp2_bc),
maxent_raster_dir_this=maxent_raster_dir_this,
historical=F)
print("ssp2")
endTime <- Sys.time()
print(endTime-startTime)
########################################
# predictions for the future   SSP3    #
########################################
startTime <- Sys.time()
run_maxent_model_prediction_single(mod=mod,
this_item_name=paste("ssp370",i,sep = ''),
grid_path_list_this = c(grid_path_list$ssp3_lc,grid_path_list$ssp3_bc),
maxent_raster_dir_this=maxent_raster_dir_this,
historical=F)
print("ssp3")
endTime <- Sys.time()
print(endTime-startTime)
########################################
# predictions for the future   SSP5    #
########################################
startTime <- Sys.time()
run_maxent_model_prediction_single(mod=mod,
this_item_name=paste("ssp585",i,sep = ''),
grid_path_list_this = c(grid_path_list$ssp5_lc,grid_path_list$ssp5_bc),
maxent_raster_dir_this=maxent_raster_dir_this,
historical=F)
print("ssp5")
endTime <- Sys.time()
print(endTime-startTime)
}
endTime <- Sys.time()
print(endTime-startTime)
}
run_maxent_model_prediction_single_save_memory <- function(mod,this_item_name,grid_path_list_this,maxent_raster_dir_this,historical=F){
startTime <- Sys.time()
print(this_item_name)
if(historical){
this_grid <- read.csv(grid_path_list_this)
this_all_area_grid <- subset(this_grid[complete.cases(this_grid), ],select = -c(left, top,right,bottom,X,forest_grassland))
}else{
clim_list1_1 <- subset(read.csv(grid_path_list_this[[1]]),select = -c(left, top,right,bottom))
clim_list1_2 <- subset(read.csv(grid_path_list_this[[2]]),select = -c(left, top,right,bottom))
this_all_area_grid <- merge(x = clim_list1_1, y = clim_list1_2, by = "id")
}
this_all_area_values <- this_all_area_grid[complete.cases(this_all_area_grid), ]
this_cell_id <-  this_all_area_values$id
this_all_area_grid_no_id <- subset(this_all_area_values,select = -c(id))
print("make prediction")
ped <- predict(mod,this_all_area_grid_no_id)
# save csv file
final_prediction <- as.data.frame(list(id = this_cell_id,
prediction = ped))
save_csv_path <- paste(maxent_raster_dir_this,"/",this_item_name,'_',this_bug,'.csv',sep = '')
write.csv(final_prediction, file = save_csv_path)
endTime <- Sys.time()
print(endTime-startTime)
}
run_maxent_model_prediction_list_grid_save_memory <- function(mod_list_path,grid_path_list,dir_sub_name,number_replicate,maxent_raster_dir){
# take a list of trained maxent models
# perform prediction on historical and future projected 2071-2100 ssp1, ssp2, ssp3, ssp5 rasters (after aligned)
# save the results as .tif files
# mod_list: list of trained maxent models
# clim: historical bioclimatic rasters (aligned)
# maxent_raster_dir: the directory under which the bioclimatic rasters (aligned) are stored, with rasters for ssp1 - ssp5 stored under corresponding subfolders.
cat("\nmodel-list prediction")
startTime <- Sys.time()
mod_list <- readRDS(mod_list_path)
maxent_raster_dir_this <- paste(maxent_raster_dir,'/',dir_sub_name,sep = '')
print(maxent_raster_dir_this)
if (!dir.exists(maxent_raster_dir_this)){
dir.create(maxent_raster_dir_this)
}else{
print("dir exists")
}
for (i in 1:number_replicate){
cat("\n",i)
mod <- mod_list[[i]]
########################################
# historical prediction                #
########################################
#
startTime <- Sys.time()
run_maxent_model_prediction_single(mod=mod,
this_item_name=paste("historical_predict",i,sep = ''),
grid_path_list_this = grid_path_list$historical_all,
maxent_raster_dir_this=maxent_raster_dir_this,
historical=T)
print("historical_clim")
endTime <- Sys.time()
print(endTime-startTime)
########################################
# predictions for the future   SSP1    #
########################################
startTime <- Sys.time()
run_maxent_model_prediction_single(mod=mod,
this_item_name=paste("ssp126",i,sep = ''),
grid_path_list_this = c(grid_path_list$ssp1_lc,grid_path_list$ssp1_bc),
maxent_raster_dir_this=maxent_raster_dir_this,
historical=F)
print("ssp1")
endTime <- Sys.time()
print(endTime-startTime)
########################################
# predictions for the future   SSP2    #
########################################
startTime <- Sys.time()
run_maxent_model_prediction_single(mod=mod,
this_item_name=paste("ssp245",i,sep = ''),
grid_path_list_this = c(grid_path_list$ssp2_lc,grid_path_list$ssp2_bc),
maxent_raster_dir_this=maxent_raster_dir_this,
historical=F)
print("ssp2")
endTime <- Sys.time()
print(endTime-startTime)
########################################
# predictions for the future   SSP3    #
########################################
startTime <- Sys.time()
run_maxent_model_prediction_single(mod=mod,
this_item_name=paste("ssp370",i,sep = ''),
grid_path_list_this = c(grid_path_list$ssp3_lc,grid_path_list$ssp3_bc),
maxent_raster_dir_this=maxent_raster_dir_this,
historical=F)
print("ssp3")
endTime <- Sys.time()
print(endTime-startTime)
########################################
# predictions for the future   SSP5    #
########################################
startTime <- Sys.time()
run_maxent_model_prediction_single(mod=mod,
this_item_name=paste("ssp585",i,sep = ''),
grid_path_list_this = c(grid_path_list$ssp5_lc,grid_path_list$ssp5_bc),
maxent_raster_dir_this=maxent_raster_dir_this,
historical=F)
print("ssp5")
endTime <- Sys.time()
print(endTime-startTime)
}
endTime <- Sys.time()
print(endTime-startTime)
}
# this_return <- prepare_input_data_kfold_grid(occ_grid_path="/Users/vivianhuang/Desktop/R-modeling-scripts/r_chagasM/cell/San.csv",
#                                              clim_grid_path="/Users/vivianhuang/Desktop/R-modeling-scripts/r_chagasM/bioclimatic/historical/5km.csv",
#                                              number_of_folds=10,
#                                              maxent_result_dir='')
# this_return <- prepare_input_data_kfold_buffer_grid(occ_grid_path="/Users/vivianhuang/Desktop/R-modeling-scripts/r_chagasM/cell/San.csv",
#                                              clim_grid_path="/Users/vivianhuang/Desktop/R-modeling-scripts/r_chagasM/bioclimatic/historical/5km.csv",
#                                              buffer_grid_path="/Users/vivianhuang/Desktop/R-modeling-scripts/r_chagasM/buffer/San.csv",
#                                              number_of_folds=10,
#                                              maxent_result_dir='')
run_maxent_kfold_cv_grid <- function(this_bug,number_replicate,top_file_dir,occ_grid_path,clim_grid_path){
########################################
# all the saving paths                 #
########################################
#/output folder saves all the output
all_path_stack <- all_saving_paths(top_file_dir=top_file_dir,this_bug=this_bug)
########################################
#       prepare the data.              #
########################################
input_data_stack_with_folds <- prepare_input_data_kfold_grid(occ_grid_path=occ_grid_path,
clim_grid_path=clim_grid_path,
number_of_folds=number_replicate,
maxent_result_dir=all_path_stack$maxent_result_dir)
########################################
# run MaxEnt                           #
########################################
knitr::opts_knit$set(root.dir = '/Users/vivianhuang/Desktop/R-modeling-scripts/r_chagasM')
opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
utils::download.file(url = "https://raw.githubusercontent.com/mrmaxent/Maxent/master/ArchivedReleases/3.4.3/maxent.jar",
destfile = paste0(system.file("java", package = "dismo"),
"/maxent.jar"), mode = "wb")  ## wb for binary file, otherwise maxent.jar can not execute
# perform cross-validation
this_input_data_stack <- input_data_stack_with_folds
cv_result_list <- run_maxent_model_cv(list_x_train_full=this_input_data_stack$list_x_train_full,
list_x_test_full=this_input_data_stack$list_x_test_full,
list_pa_train=this_input_data_stack$list_pa_train,
list_pa_test=this_input_data_stack$list_pa_test,
list_p_train=this_input_data_stack$list_p_train,
list_a_train=this_input_data_stack$list_a_train,
list_p_test=this_input_data_stack$list_p_test,
list_a_test=this_input_data_stack$list_a_test,
maxent_evaluate_dir=all_path_stack$maxent_evaluate_dir,
number_replicate=number_replicate,
maxent_model_dir=all_path_stack$maxent_model_dir,
metric_saving=T,
model_saving=T)
# train the model (for prediction)
this_model <- run_maxent_model_training_all(maxent_evaluate_dir=all_path_stack$maxent_evaluate_dir,
all_x_full=this_input_data_stack$all_x_full,
all_pa=this_input_data_stack$all_pa,
maxent_result_path=all_path_stack$maxent_result_path,
dir_sub_name="kfold_all_input",
maxent_model_dir=all_path_stack$maxent_result_path,
model_saving=T)
########################################
# predictions              #
########################################
dir_resample_mask <- "/Users/vivianhuang/desktop/resample_mask"
# perform predictions on all the cv models
run_maxent_model_prediction_list_grid(mod_list=cv_result_list$model_list,
grid_path_list=grid_path_list,
dir_sub_name='cross_validation',
number_replicate=number_replicate,
maxent_raster_dir=maxent_raster_dir)
# perform predictions on the model trained with all input data
run_maxent_model_prediction_basic_grid(mod_list=cv_result_list$model_list,
grid_path_list=grid_path_list,
dir_sub_name='cross_validation',
number_replicate=number_replicate,
maxent_raster_dir=maxent_raster_dir)
}
this_bug = 'San'
number_replicate = 10
top_file_dir = "/Users/vivianhuang/Desktop/R-modeling-scripts/r_chagasM/output/kfold_grid_buffer"
occ_grid_path = "/Users/vivianhuang/Desktop/R-modeling-scripts/r_chagasM/cell/San.csv"
clim_grid_path = "/Users/vivianhuang/Desktop/R-modeling-scripts/r_chagasM/bioclimatic/historical/5km.csv"
buffer_grid_path = "/Users/vivianhuang/Desktop/R-modeling-scripts/r_chagasM/buffer/San.csv"
#lc land cover, bc bioclimatic
grid_path_list <- list("historical_all"="/Users/vivianhuang/Desktop/R-modeling-scripts/r_chagasM/bioclimatic/historical/5km.csv",
"ssp1_lc"="/Users/vivianhuang/Desktop/R-modeling-scripts/r_chagasM/bioclimatic/ssp1/global_SSP1_RCP26_2085/5km.csv",
"ssp1_bc"="/Users/vivianhuang/Desktop/R-modeling-scripts/r_chagasM/bioclimatic/ssp1/ssp126_2071_2100/5km.csv",
"ssp2_lc"="/Users/vivianhuang/Desktop/R-modeling-scripts/r_chagasM/bioclimatic/ssp2/global_SSP2_RCP45_2085/5km.csv",
"ssp2_bc"="/Users/vivianhuang/Desktop/R-modeling-scripts/r_chagasM/bioclimatic/ssp2/ssp245_2071_2100/5km.csv",
"ssp3_lc"="/Users/vivianhuang/Desktop/R-modeling-scripts/r_chagasM/bioclimatic/ssp3/global_SSP3_RCP70_2085/5km.csv",
"ssp3_bc"="/Users/vivianhuang/Desktop/R-modeling-scripts/r_chagasM/bioclimatic/ssp3/ssp370_2071_2100/5km.csv",
"ssp5_lc"="/Users/vivianhuang/Desktop/R-modeling-scripts/r_chagasM/bioclimatic/ssp5/global_SSP5_RCP85_2085/5km.csv",
"ssp5_bc"="/Users/vivianhuang/Desktop/R-modeling-scripts/r_chagasM/bioclimatic/ssp5/ssp585_2071_2100/5km.csv")
########################################
# all the saving paths                 #
########################################
#/output folder saves all the output
all_path_stack <- all_saving_paths(top_file_dir=top_file_dir,this_bug=this_bug)
########################################
#       prepare the data.              #
########################################
# this_input_data_stack <- prepare_input_data_kfold_grid(occ_grid_path=occ_grid_path,
#                                                                clim_grid_path=clim_grid_path,
#                                                                number_of_folds=number_replicate,
#                                                                maxent_result_dir=all_path_stack$maxent_result_dir)
this_input_data_stack <- prepare_input_data_kfold_grid(occ_grid_path=occ_grid_path,
clim_grid_path=clim_grid_path,
buffer_grid_path=buffer_grid_path,
number_of_folds=number_replicate,
maxent_result_dir=all_path_stack$maxent_result_dir)
this_input_data_stack <- prepare_input_data_kfold_buffer_grid(occ_grid_path=occ_grid_path,
clim_grid_path=clim_grid_path,
buffer_grid_path=buffer_grid_path,
number_of_folds=number_replicate,
maxent_result_dir=all_path_stack$maxent_result_dir)
########################################
# run MaxEnt                           #
########################################
knitr::opts_knit$set(root.dir = '/Users/vivianhuang/Desktop/R-modeling-scripts/r_chagasM')
opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
utils::download.file(url = "https://raw.githubusercontent.com/mrmaxent/Maxent/master/ArchivedReleases/3.4.3/maxent.jar",
destfile = paste0(system.file("java", package = "dismo"),
"/maxent.jar"), mode = "wb")  ## wb for binary file, otherwise maxent.jar can not execute
# perform cross-validation
cv_result_list <- run_maxent_model_cv_grid(list_x_train_full=this_input_data_stack$list_x_train_full,
list_x_test_full=this_input_data_stack$list_x_test_full,
list_pa_train=this_input_data_stack$list_pa_train,
list_pa_test=this_input_data_stack$list_pa_test,
list_p_train=this_input_data_stack$list_p_train,
list_a_train=this_input_data_stack$list_a_train,
list_p_test=this_input_data_stack$list_p_test,
list_a_test=this_input_data_stack$list_a_test,
maxent_evaluate_dir=all_path_stack$maxent_evaluate_dir,
number_replicate=number_replicate,
maxent_model_dir=all_path_stack$maxent_model_dir,
metric_saving=T,
model_saving=T)
# train the model (for prediction)
this_model <- run_maxent_model_training_all_grid(maxent_evaluate_dir=all_path_stack$maxent_evaluate_dir,
all_x_full=this_input_data_stack$all_x_full,
all_pa=this_input_data_stack$all_pa,
maxent_result_path=all_path_stack$maxent_result_path,
dir_sub_name="kfold_all_input",
maxent_model_dir=all_path_stack$maxent_model_dir,
model_saving=T)
########################################
# predictions              #
########################################
rm(this_input_data_stack)
cv_result_list_path <- "/Users/vivianhuang/Desktop/R-modeling-scripts/r_chagasM/output/kfold_buffer/San/evaluate/cv_models.RDS"
this_model_path <- "/Users/vivianhuang/Desktop/R-modeling-scripts/r_chagasM/output/kfold_buffer/result/model/kfold_buffer_all_input_final_model_training_all.RDS"
# perform predictions on all the cv models
run_maxent_model_prediction_list_grid(mod_list_path=cv_result_list_path,
grid_path_list=grid_path_list,
dir_sub_name='cross_validation',
number_replicate=number_replicate,
maxent_raster_dir=all_path_stack$maxent_raster_dir)
library("sp")
library('sf')
library("rJava")
library("raster")
library("dismo")
library("rgeos")
library("knitr")
library("rprojroot")
library("caret")
library("Metrics")
clim_dir <- "/Users/vivianhuang/Desktop/resample_mask/historical/"
this_clim_list <- list.files(clim_dir, pattern = '.tif$', full.names = T)  # '..' leads to the path above the folder where the .rmd file is located
this_clim <- raster::stack(this_clim_list)
this_clean_clim <- na.omit(raster::values(this_clim))
